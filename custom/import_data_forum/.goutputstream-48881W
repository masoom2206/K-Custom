<?php
 error_reporting(E_ALL);
 ini_set("display_errors", 1);
ini_set('memory_limit', '-1');
/* Implement hook_block_info()
 * for creating custom block for wiki and responce videos.
 */
function import_data_forum_permission() {
  return array(
    'perform import data' => array(
      'title' => t('Perform Import Data'),
      'description' => t('Perform Import Data.'),
    ),
  );
}


function import_data_forum_menu(){
  $items = array();
  $items['admin/config/data/import'] = array(
    'title' => 'Forum Import',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('forum_config_data_import'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access content'),
    // Page callback, etc. need to be added here.
  );
  return $items;
}


/*
 * Implement the news_import_form for render the import form with batch setting for forum data.
 *
 */
function forum_config_data_import(){
  
  $form['description'] = array(
    '#type' => 'markup',
    '#markup' => t('Importing the content, tag and catogery data from phpbb and prevent the duplicate data.'),
  );
  $form['batch'] = array(
    '#type' => 'select',
    '#title' => 'Choose batch',
    '#options' => array(
      'batch_1' => t('batch 1 - Import the Forum-catigories data IPB to drupal'),
      'batch_2' => t('batch 2 - Import the Forum-Forum data IPB to drupal'),
      'batch_3' => t('batch 3 - Import the Forum-Topics data IPB to drupal'),
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go',
  );
  return $form;
}

/*
 * Implement function to incress the batch function operation
 */
function _import_data_update_http_requests() {
  $_SESSION['http_request_count']++;
}


/*
 * Implement function to get http request on starting on batch function operation
 */
function _import_data_get_http_requests() {
  return !empty($_SESSION['http_request_count']) ? $_SESSION['http_request_count'] : 0;
}


function forum_config_data_import_submit($form, &$form_state){ 
  $function = 'import_data_d_' . $form_state['values']['batch'];
  $_SESSION['http_request_count'] = 0; // reset counter for debug information.
  $batch = $function();
  batch_set($batch);
}


/*
 * Implemtent the function for import all term into dupral.
 */
function import_data_d_batch_1() {
  db_set_active('slave');
  $num_operations = db_select('data_live_for_ref.ibf_forums', 'ibf')->fields('ibf')->execute()->rowCount();
  $tids = db_select('data_live_for_ref.ibf_forums', 'tc')->fields('tc')->orderBy('tc.id', 'ASC')->execute();
  db_set_active();
  drupal_set_message(t('Creating an array of @num operations', array('@num' => $num_operations)));
  $operations = array();
  $i = 0;
  print '<pre>';
  print_r($tids);
exit;
  while ($data = $tids->fetchAssoc()) {
    $operations[] = array('import_fdata_op_1', array($data, t('(Operation @operation)', array('@operation' => $i))));
    $i++;
  }
 /* $batch = array(
    'operations' => $operations,
    'finished' => 'import_data_finished',
  );
  return $batch;*/
}




function import_fdata_op_1() {
   $context['message'] = t('Loading tags "@title"', array('@title' => $term->name)) . ' ' . $operation_details;
   // add new terms only to database.
     
  	$forum_object = taxonomy_vocabulary_machine_name_load('forums');
		
		$tax = taxonomy_get_term_by_name($f->name); 
		
		foreach($tax as $t) {
			$t->parent = ($f->parent_id > 0) ? addParentTax($f->parent_id):0;
			taxonomy_term_save($t);
			$tax = $t;	
		}
		
		if (!is_object($tax)) {
			$pid = ($f->parent_id > 0) ? addParentTax($f->parent_id):0;
			
			$tax = taxonomy_term_save((object) array(
									'name' => $f->name,
									'vid' => $forum_object->vid,
									'description'=>$f->description,
									'parent'=>$pid,
									));
			$tax = taxonomy_get_term_by_name($f->name); 
			foreach($tax as $t) {
			$tax = $t;	
		}
		
		}
}

/*
 * Implemtent the function for import all term into dupral.
 */
function import_data_d_batch_2() {
  db_set_active('slave');
  $num_operations = db_select('data_live_for_ref.ibf_topics', 'ibf')->fields('ibf')->execute()->rowCount();
  $tids = db_select('data_live_for_ref.ibf_topics', 'tc')->fields('tc')->orderBy('tc.tid', 'ASC')->execute();
  db_set_active();
  drupal_set_message(t('Creating an array of @num operations', array('@num' => $num_operations)));
  $operations = array();
  $i = 0;
  while ($data = $tids->fetchAssoc()) {
    $operations[] = array('import_fdata_op_2', array($data, t('(Operation @operation)', array('@operation' => $i))));
    $i++;
  }
  $batch = array(
    'operations' => $operations,
    'finished' => 'import_data_finished',
  );
  return $batch;
}




function import_fdata_op_2() {
  $context['message'] = t('Loading tags "@title"', array('@title' => $term->name)) . ' ' . $operation_details;
  
  /*
  $node = new stdClass();
  $node->title = $t->title;
  $node->body['und'][0]['value'] = $t->description;
  $node->type = 'forum';   // Your specified content type
  $node->created = $t->start_date;
  $node->changed = $t->last_post;
  $node->status = 1;       // To have published, else use 0
  $node->promote = 1;      // If you want promoted to front page, else use 0
  $node->sticky = 0;
  $node->body['und'][0]['format'] = 'full_html';       // Filtered HTML
  $node->uid = $member->uid;          // UID of content owner
	if ($t->state == 'open') {
 		 $node->comment = 2;
	}
	else {
		$node->comment = 1;	
	}
  $node->language = 'en';
 // $node->comment_body['und'][0]['format'] = 'filtered_html'; 
  // If known, the taxonomy TID values can be added as an array.
  $node->taxonomy_forums['und'][0]['tid'] = $tax->tid;
  */
}

/*
 * Implemtent the function for import all term into dupral.
 */
function import_data_d_batch_3() {
  db_set_active('slave');
  $num_operations = db_select('data_live_for_ref.ibf_forums', 'ibf')->fields('ibf')->execute()->rowCount();
  $tids = db_select('data_live_for_ref.ibf_forums', 'tc')->fields('tc')->orderBy('tc.id', 'ASC')->execute();
  db_set_active();
  drupal_set_message(t('Creating an array of @num operations', array('@num' => $num_operations)));
  $operations = array();
  $i = 0;
  while ($data = $tids->fetchAssoc()) {
    $operations[] = array('import_fdata_op_3', array($data, t('(Operation @operation)', array('@operation' => $i))));
    $i++;
  }
  $batch = array(
    'operations' => $operations,
    'finished' => 'import_data_finished',
  );
  return $batch;
}




function import_fdata_op_3() {
   $context['message'] = t('Loading tags "@title"', array('@title' => $term->name)) . ' ' . $operation_details;
}

function hook_cron() { 
 // import_data_d_batch_1();
 // import_data_d_batch_2();
 // import_data_d_batch_3();
}
